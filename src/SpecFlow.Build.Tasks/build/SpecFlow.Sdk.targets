<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <!-- This ensures that msbuild will rebuild this project if the props/targets file changes -->
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <PropertyGroup>
    <SpecFlowTrace Condition=" '$(SpecFlowTrace)' == '' ">false</SpecFlowTrace>
    <SpecFlowVerbose Condition=" '$(SpecFlowVerbose)' == '' ">false</SpecFlowVerbose>
    <SpecFlowIntermediateOutputPath Condition=" '$(SpecFlowIntermediateOutputPath)' == '' ">$(IntermediateOutputPath)specflow\</SpecFlowIntermediateOutputPath>
  </PropertyGroup>

  <UsingTask TaskName="SpecFlow.Build.Tasks.GenerateSpecFlowFeatureFiles" AssemblyFile="$(SpecFlowBuildTasksAssembly)" />

  <PropertyGroup>
    <CoreCompileDependsOn>
      SpecFlowCompile;
      $(CoreCompileDependsOn);
    </CoreCompileDependsOn>
    <CleanDependsOn>
      SpecFlowClean;
      $(CleanDependsOn);
    </CleanDependsOn>

    <SpecFlowCompileDependsOn>
      $(SpecFlowCompileDependsOn);
      _GenerateSpecFlowFeature;
      _AddSpecFlowGeneratedFeature;
    </SpecFlowCompileDependsOn>
    <SpecFlowCleanDependsOn>
      $(SpecFlowCleanDependsOn);
      _CleanGeneratedSpecFlowFeature;
    </SpecFlowCleanDependsOn>
  </PropertyGroup>

  <Target Name="SpecFlowCompile" DependsOnTargets="$(SpecFlowCompileDependsOn)">
  </Target>

  <Target Name="_GenerateSpecFlowFeature" Inputs="@(SpecFlowFeature)" Outputs="@(SpecFlowFeature->'%(Identity).cs')">
    <!-- TODO: This task ends up reading the msbuild project to get settings. Pass them in instead. -->
    <GenerateSpecFlowFeatureFiles ShowTrace="$(SpecFlowTrace)"
                                  VerboseOutput="$(SpecFlowVerbose)"
                                  ProjectPath="$(MSBuildProjectFullPath)"
                                  FeatureFiles="@(SpecFlowFeature)">
      <Output TaskParameter="GeneratedFiles" ItemName="SpecFlowGeneratedFile" />
    </GenerateSpecFlowFeatureFiles>
  </Target>

  <Target Name="_AddSpecFlowGeneratedFeature">
    <ItemGroup>
      <!-- Deduplicate the generated files from the ones picked up directly by the default glob -->
      <Compile Remove="@(SpecFlowFeature->'%(Identity).cs')" />
      <Compile Include="@(SpecFlowFeature->'%(Identity).cs')">
        <Visible>false</Visible>
      </Compile>
      <FileWrite Include="@(SpecFlowFeature->'%(Identity).cs')" />
    </ItemGroup>
  </Target>

  <Target Name="SpecFlowClean" DependsOnTargets="$(SpecFlowCleanDependsOn)">
  </Target>

  <Target Name="_CleanGeneratedSpecFlowFeature">
    <ItemGroup>
      <_SpecFlowGeneratedFeatureToDelete Include="**/*$(DefaultSpecFlowGeneratedFeatureExtension)" />
    </ItemGroup>
    <Delete Files="@(_SpecFlowGeneratedFeatureToDelete)" ContinueOnError="true" />
  </Target>

  <Import Project="SpecFlow.Sdk.DefaultItems.targets" />
  <Import Project="SpecFlow.Sdk.DesignTime.targets" />

</Project>
